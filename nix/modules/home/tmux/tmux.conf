########################################################
# General settings
########################################################

# Look good
# set-option -g default-terminal "screen-256color"
set-option -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color*:Tc"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# Act like Vim
set-window-option -g mode-keys vi

# emacs key bindings in tmux command prompt (prefix + :) are better than vi keys even for vim users
set -g status-keys emacs

# Allow automatic renaming of windows
set -g allow-rename on

# Renumber windows when one is removed
set -g renumber-windows on

# Enable the mouse for scrolling
set -gq mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Allow tmux to set the title bar
set -g set-titles on

# How long to display the pane number on PREFIX-q
set -g display-panes-time 3000 # 3s

# How long to wait for repeated keys bound with bind -r
set -g repeat-time 2000 # 2s

# A bell in another window should cause a bell in the current window
set -g bell-action any

# Don't show distracting notifications
set -g visual-bell off
set -g visual-activity off

# focus events enabled for terminals that support them
set -g focus-events on

# super usefule when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# don't detach from tmux when killing a session
set -g detach-on-destroy off

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# set scrollback history to 10000 (10k)
set -g history-limit 10000

# increase responsiveness
set -s escape-time 0

# make window and pane number index start at 1
set -g base-index 1
set -g pane-base-index 1

##########################################################
# Key bindings
##########################################################

# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't need to be prefixed

# set Ctrl-Space as the default prefix key combination
# and unbind C-b to free it up
set -g prefix C-Space
bind C-Space send-prefix
unbind C-b

# reload config file with "PREFIX-r"
unbind r
bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded!"

# Enable C-Up/Down in vim
setw -g xterm-keys on
unbind-key C-Up
unbind-key C-Down

# Move around panes like in vim
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Switch between previous and next window with repeats
bind -r n next-window
bind -r p previous-window
bind C-n next-window
bind C-p previous-window

# Switch between the last used window and the current one
bind Space last-window

# use # for vertical and - for horizontal splitting of the current window
# Also sets the starting path of the new pane to the path of the current pane
bind '#' split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Set path for newly created windows too
bind c new-window -c "#{pane_current_path}"

# break out current pane into it's own window
bind + break-pane

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Enter copy mode with "PREFIX+C-Space"
unbind [
bind C-Space copy-mode

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbgopy copy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "reattach-to-user-namespace pbgopy copy"

# split panes evenly
bind e select-layout even-horizontal

################################################################
#### Status bar
################################################################

bind s set -g status
# set -g status-justify center

set -g status-right-length 30
set -g status-interval 3
set -g status-left-length 48
set -g status-left "#[fg=blue]  #(tmux-mem-cpu-load --p -i 3 -g 2 -a 1 -m 2)"
set -g status-right "#[fg=blue]#S#[fg=default]__#[fg=yellow]%d %b %Y_%H:%M "

################################################################
#### COLOUR (Nightfox)
################################################################
# set -g pane-border-style fg=default
# set -g pane-active-border-style fg=default
# set -g pane-active-border-style bg=yellow
source-file ~/.tmux/nightfox.conf

# start a shell inside a wrapper that enables access to system clipboard
# # https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
# set-option -g default-command "reattach-to-user-namespace -l zsh"

# run '~/.tmux/plugins/tpm/tpm'

new-session -n $HOST
