#!/bin/bash
export SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"
export QT_QPA_PLATFORMTHEME="qt5ct"
autorandr -c

# Down the last running theme
if [ -f "/tmp/leftwm-theme-down" ]; then
    /tmp/leftwm-theme-down
    rm /tmp/leftwm-theme-down
fi
ln -s "$SCRIPTPATH"/down /tmp/leftwm-theme-down

# Boot picom or compton if it exists
if [ -x "$(command -v picom)" ]; then
  picom --experimental-backends --config "$SCRIPTPATH"/picom/picom.conf &> /dev/null &
elif [ -x "$(command -v compton)" ]; then
  compton &> /dev/null &
fi

# Set the theme.toml config
echo "LoadTheme $SCRIPTPATH/theme.toml" > "$XDG_RUNTIME_DIR"/leftwm/commands.pipe

# Set background
if [ -x "$(command -v feh)" ]; then
  monitor_count=$(xrandr --listactivemonitors | grep -oP '\+\d+\+\d+' | uniq | wc -l)
  if [ $monitor_count -eq 1 ]; then
    MONITORS=$(xrandr --listmonitors | grep -e DP2-1 -e DP2-3 | wc -l)
    if [[ $MONITORS -eq 2 ]]; then
      xrandr \
        --output eDP1 --primary --mode 1920x1080 --pos 1920x0 --rotate normal \
        --output DP2-3 --mode 1920x1080 --pos 0x0 --rotate normal \
        --output DP2-1 --mode 1920x1080 --pos 3840x0 --rotate normal

      monitors=($(xrandr --listactivemonitors | grep -oP '\d:' | sed 's/://'))
      for i in "${monitors[@]}"; do
        nitrogen --head=$i --set-zoom-fill "$SCRIPTPATH/background_$i.png"
      done
    else
      nitrogen --set-zoom-fill "$SCRIPTPATH/background_0.png"
    fi

  else
    monitors=($(xrandr --listactivemonitors | grep -oP '\d:' | sed 's/://'))
    for i in "${monitors[@]}"; do
      nitrogen --head=$i --set-zoom-fill "$SCRIPTPATH/background_$i.png"
    done
  fi
fi

#Applications to 2run at startup
dunst -conf "$SCRIPTPATH"/dunst/dunstrc &
greenclip daemon &
nm-applet &
blueman-applet &
dropbox &
udiskie -ans -f /usr/bin/pcmanfm &
onedrive -m &
lxqt-policykit-agent &
xfce4-power-manager &
xautolock -time 20 -detectsleep -locker "/usr/bin/betterlockscreen -l dimblur -- -n" -killtime 10 -killer "systemctl hybrid-sleep" &
syndaemon -i 1 dkR &
xset dpms 900 900 900
remaps
xbanish &

#Start Polybar
export index=0
monitors=($(polybar -m | sed s/:.*//))
leftwm-state -q -n -t "$SCRIPTPATH"/liquid/sizes.liquid | sed -r '/^\s*$/d' | while read -r width x y
do
  barname="mainbar$index"
  monitor=${monitors[index]} width=$(( width - 16 )) polybar -c "$SCRIPTPATH"/polybar/polybar.config $barname &> /dev/null &
  let index=index+1
done
